package com.mycompany.finalproject;

import com.google.gson.Gson;
import java.awt.Desktop;
import java.net.URI;
import java.net.URISyntaxException;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
    This class displays a GUI application that takes in five user inputs based on car make, year, model, zip code and distance desires.
    The user then has the option to search between four different used car websites based on their selections: Cars.com, CarMax.com, TrueCar.com, or AutoTrader.com. 
    The user may go back to the home screen or go to a favorites page where they can see all of their saved recent searches as direct links. 
*/
public class QuickSearch extends javax.swing.JFrame {
    private StartScreen home;
    private Favorite favorites;         
    private static String[] makeArray;   // holds all models from the allMakes.json file.
    private static ModelsListResult[] info;
    private static String[] modelArray;  // holds all models from 1992-2024.json files that correspond with the currently selected make. 
                                         // array specifically created for the use of the addJsonToComboBoxModel() method. 
    
    /* Constructor that creates the GUI elements for the JFrame.
       Calls addJsonToComboBoxMake to populate the comboBoxes with corresponding json files.
       Calls addJsonToComboBoxModel to populate the comboBoxes with models based on the currently selected make. The files determine what models are available. 
       Json files remain in main > resources folder.*/
    public QuickSearch() { 
        initComponents();
        for(int year=1992; year<2024; year++) {
            // populate jComboBoxYear with years 1992-2024 
            jComboBoxYear.addItem(Integer.toString(year));
        }
        // add all makes list to the combo box from the api / json file
        addJsonToComboBoxMake(getClass().getResource("/allMakes.json").getFile(), jComboBoxMake);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxModel = new javax.swing.JComboBox<>();
        jLabelMake = new javax.swing.JLabel();
        jLabelModel = new javax.swing.JLabel();
        jLabelYear = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        jComboBoxDistance = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jtfZipCode = new javax.swing.JTextField();
        jButtonFavorites = new javax.swing.JButton();
        jButtonSaveSearch = new javax.swing.JButton();
        jComboBoxMake = new javax.swing.JComboBox<>();
        jButtonCars = new javax.swing.JButton();
        jButtonAutoTrader = new javax.swing.JButton();
        jButtonTrueCar = new javax.swing.JButton();
        jButtonCarMax = new javax.swing.JButton();
        jComboBoxYear = new javax.swing.JComboBox<>();
        jLabelYear1 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Hiragino Mincho ProN", 1, 36)); // NOI18N
        jLabel1.setText("Used Car Quick Search");

        jComboBoxModel.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jComboBoxModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MDX", "Integra","S4", "RS_Q8", "R8", "LaCrosse", "M4", "M8", "Wrangler", "Quattroporte" }));
        jComboBoxModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModelActionPerformed(evt);
            }
        });

        jLabelMake.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jLabelMake.setText("Make");

        jLabelModel.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jLabelModel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelModel.setText("Model");

        jLabelYear.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jLabelYear.setText("Zip");

        homeButton.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        homeButton.setText("Home");
        homeButton.setAlignmentY(1.0F);
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        jComboBoxDistance.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jComboBoxDistance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "50", "100", "200", "500", "1000" }));
        jComboBoxDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDistanceActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jLabel4.setText("Distance");

        jtfZipCode.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jtfZipCode.setText("01752");

        jButtonFavorites.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jButtonFavorites.setText("Favorites");
        jButtonFavorites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFavoritesActionPerformed(evt);
            }
        });

        jButtonSaveSearch.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jButtonSaveSearch.setText("Save Search");
        jButtonSaveSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveSearchActionPerformed(evt);
            }
        });

        jComboBoxMake.setFont(new java.awt.Font("Kohinoor Bangla", 0, 13)); // NOI18N
        jComboBoxMake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        jComboBoxMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMakeActionPerformed(evt);
            }
        });

        jButtonCars.setBackground(new java.awt.Color(62, 55, 151));
        jButtonCars.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jButtonCars.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCars.setText("Cars.com");
        jButtonCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarsActionPerformed(evt);
            }
        });

        jButtonAutoTrader.setBackground(new java.awt.Color(255, 149, 2));
        jButtonAutoTrader.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jButtonAutoTrader.setForeground(new java.awt.Color(1, 33, 105));
        jButtonAutoTrader.setText("AutoTrader");
        jButtonAutoTrader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAutoTraderActionPerformed(evt);
            }
        });

        jButtonTrueCar.setBackground(new java.awt.Color(0, 0, 0));
        jButtonTrueCar.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jButtonTrueCar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTrueCar.setText("TrueCar");
        jButtonTrueCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTrueCarActionPerformed(evt);
            }
        });

        jButtonCarMax.setBackground(new java.awt.Color(255, 217, 0));
        jButtonCarMax.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jButtonCarMax.setForeground(new java.awt.Color(5, 51, 97));
        jButtonCarMax.setText("Car Max");
        jButtonCarMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarMaxActionPerformed(evt);
            }
        });

        /*
        jComboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        */
        jComboBoxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxYearActionPerformed(evt);
            }
        });

        jLabelYear1.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        jLabelYear1.setText("Year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxMake, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelYear1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelModel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelYear, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jComboBoxDistance, 0, 1, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                        .addGap(354, 354, 354)
                        .addComponent(jButtonFavorites))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAutoTrader, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCars, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonTrueCar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jButtonCarMax, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelMake, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(jButtonSaveSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeButton)
                    .addComponent(jButtonFavorites))
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMake)
                    .addComponent(jLabelYear)
                    .addComponent(jLabel4)
                    .addComponent(jLabelYear1)
                    .addComponent(jLabelModel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSaveSearch)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAutoTrader, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCars, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTrueCar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarMax, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        home = new StartScreen();
        home.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void jComboBoxModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModelActionPerformed
        getModel();
    }//GEN-LAST:event_jComboBoxModelActionPerformed

    private void jComboBoxDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDistanceActionPerformed
        getDist();
    }//GEN-LAST:event_jComboBoxDistanceActionPerformed

    private void jButtonFavoritesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFavoritesActionPerformed
        favorites = new Favorite();
        favorites.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonFavoritesActionPerformed

    private void jButtonSaveSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveSearchActionPerformed
        // when clicked, whatever is currently selected in make, model, zip and distance 
        // will be put into the URl and added to favorites.
        String make = getMake().replace(' ', '_').replace('-', '_').toLowerCase();
        String model = getModel().replace(' ', '_').replace('-', '_').toLowerCase();
        int year = getYear();
        int distance = getDist();
        String zipCode = getZip();
        String url1 = "https://www.cars.com/shopping/results/?dealer_id=&keyword=&list_price_max=&list_price_min=&makes[]="+make+"&maximum_distance="+distance+"&mileage_max=&models[]="+make+"-"+model+"&monthly_payment=&page_size=20&sort=best_match_desc&stock_type=all&year_max="+year+"&year_min="+year+"&zip="+zipCode;
        String url2 = "https://www.autotrader.com/cars-for-sale/all-cars/"+year+"/"+make+"/"+model+"/"+zipCode+"?isNewSearch=true&searchRadius="+distance+"&zip="+zipCode;
        String url3 = "https://www.truecar.com/used-cars-for-sale/listings/"+make+"/"+model+"/year-"+year+"/location-"+zipCode+"/?searchRadius="+distance;
        String url4 = "https://www.carmax.com/cars/"+make+"/"+model+"?year="+year+"-"+year;
        Favorite carURL = new Favorite(url1);   
        Favorite autoURL = new Favorite(url2);
        Favorite trueURL = new Favorite(url3);
        Favorite maxURL = new Favorite(url4);
        carURL.add();
        autoURL.add();
        trueURL.add();
        maxURL.add();
    }//GEN-LAST:event_jButtonSaveSearchActionPerformed
    // CARS.COM
    private void jButtonCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarsActionPerformed
        String make = getMake().replace(' ', '_').replace('-', '_').toLowerCase();
        if(getModel() == null) {
            JOptionPane.showMessageDialog(null, "Must select a model! Select a mode & year to select a model. ");
            return;
        }
        String model = getModel().replace(' ', '_').replace('-', '_').toLowerCase();
        int year = getYear();
        int distance = getDist();
        String zipCode = getZip();
        String url = "https://www.cars.com/shopping/results/?dealer_id=&keyword=&list_price_max=&list_price_min=&makes[]="+make+"&maximum_distance="+distance+"&mileage_max=&models[]="+make+"-"+model+"&monthly_payment=&page_size=20&sort=best_match_desc&stock_type=all&year_max="+year+"&year_min="+year+"&zip="+zipCode;
        try {
            openWebpage(new URI(url));
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(null, "Error opening the url");
        }
    }//GEN-LAST:event_jButtonCarsActionPerformed

    private void jComboBoxMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMakeActionPerformed
        getMake();
    }//GEN-LAST:event_jComboBoxMakeActionPerformed

    private void jComboBoxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxYearActionPerformed
        String year = jComboBoxYear.getSelectedItem().toString();
        addJsonToComboBoxModel(getClass().getResource("/"+year+".json").getFile(), jComboBoxModel);
    }//GEN-LAST:event_jComboBoxYearActionPerformed
    // AUTOTRADER
    private void jButtonAutoTraderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAutoTraderActionPerformed
        String make = getMake().replace(' ', '_').replace('-', '_').toLowerCase();
        if(getModel() == null) {
            JOptionPane.showMessageDialog(null, "Must select a model! Select a mode & year to select a model. ");
            return;
        }
        String model = getModel().replace(' ', '_').replace('-', '_').toLowerCase();
        int year = getYear();
        int distance = getDist();
        String zipCode = getZip();
        String url = "https://www.autotrader.com/cars-for-sale/all-cars/"+year+"/"+make+"/"+model+"/"+zipCode+"?isNewSearch=true&searchRadius="+distance+"&zip="+zipCode;
        try {
            openWebpage(new URI(url));
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(null, "Error opening the url");
        }
    }//GEN-LAST:event_jButtonAutoTraderActionPerformed
    // TRUECAR
    private void jButtonTrueCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTrueCarActionPerformed
        String make = getMake().replace(' ', '_').replace('-', '_').toLowerCase();
        if(getModel() == null) {
            JOptionPane.showMessageDialog(null, "Must select a model! Select a mode & year to select a model. ");
            return;
        }
        String model = getModel().replace(' ', '_').replace('-', '_').toLowerCase();
        int year = getYear();
        int distance = getDist();
        String zipCode = getZip();
        String url = "https://www.truecar.com/used-cars-for-sale/listings/"+make+"/"+model+"/year-"+year+"/location-"+zipCode+"/?searchRadius="+distance;
        try {
            openWebpage(new URI(url));
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(null, "Error opening the url");
        }
    }//GEN-LAST:event_jButtonTrueCarActionPerformed
    // CARMAX
    private void jButtonCarMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarMaxActionPerformed
        String make = getMake().replace(' ', '_').replace('-', '_').toLowerCase();
        if(getModel() == null) {
            JOptionPane.showMessageDialog(null, "Must select a model! Select a mode & year to select a model. ");
            return;
        }
        String model = getModel().replace(' ', '_').replace('-', '_').toLowerCase();
        int year = getYear();
        String url = "https://www.carmax.com/cars/"+make+"/"+model+"?year="+year+"-"+year;
        try {
            openWebpage(new URI(url));
        } catch (URISyntaxException e) {
            JOptionPane.showMessageDialog(null, "Error opening the url");
        }
    }//GEN-LAST:event_jButtonCarMaxActionPerformed

    private String getMake() {
        return getSelectedStrFromComboBox(jComboBoxMake);
    }
    private String getModel() {
        return getSelectedStrFromComboBox(jComboBoxModel);
    }
    private int getYear() {
        return getSelectedIntFromComboBox(jComboBoxYear, 2023);
    }
    private int getDist() {
        return getSelectedIntFromComboBox(jComboBoxDistance, 5);
    }   
    private String getZip() {
        //if selectedItem() is more or less than 5 digits, throw an error message
        String zipCode = jtfZipCode.getText();
        if(isValidZip(zipCode)) { 
            return zipCode;
        } else {
            JOptionPane.showMessageDialog(null, "Error opening the file");
            return "01752";
        }
    }
    /* method: checks to see if input is a valid zip code (5 digits long, all numbers). 
       parameters: inputted information for zipCode text box.
       returns: boolean.
    */
    public static boolean isValidZip(String input) {
        // https://stackoverflow.com/questions/23093808/check-if-a-string-consists-of-exactly-5-digits-in-java
        // \\d{5} represents a five digit number.
        String regex = "\\d{5}";
        // Create a Pattern object
        Pattern pattern = Pattern.compile(regex);
        // Create a Matcher object
        Matcher matcher = pattern.matcher(input);
        // Check if the string matches the pattern
        return matcher.matches();
    }
    
    /* method: finds the selected String item in the given jComboBox. 
       parameters: jComboBox
       returns: (String) returns the currently selected String item in a jComboBox.
    */ 
    private String getSelectedStrFromComboBox(JComboBox jComboBox) {
        Object selectedItem = jComboBox.getSelectedItem();
        String selectedItemStr;
        if (selectedItem != null) {
            selectedItemStr = selectedItem.toString();
            return selectedItemStr;
        } else {
            return null;
        }
    }
    /* method: finds the selected int item in the given jComboBox. 
       parameters: jComboBox, elseNum - a number if nothing is selected.
       returns: (int) returns the currently selected int item in a jComboBox.
    */     
    private int getSelectedIntFromComboBox(JComboBox jComboBox, int elseNum) {
        Object selectedItem = jComboBox.getSelectedItem();
        String selectedItemStr = selectedItem.toString();
        int selectedItemInt;
        if (selectedItem != null) {
            selectedItemInt = Integer.parseInt(selectedItemStr);
            return selectedItemInt;
        } else {
            return elseNum;
        }
    }
    /* method: opens a web page in a browser. 
       parameters: passed in URL link
       returns: void
    */ 
    private void openWebpage(URI uri) {
        if(Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
            try {
                Desktop.getDesktop().browse(uri);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error opening the file");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Desktop browsing is not supported on this platform.");
        }
    }
    
    /* method: takes in a relative file path of json file, reads in data, and adds the whole array into a j-combo-box.
               the make data was copied from the makes of cars.com in the inspect section, formatted in vscode from csv to json, and brought into Netbeans for usage.
       parameters: filePath to data files, jComboBox.
       returns: void.
    */
    private void addJsonToComboBoxMake(String filePath, JComboBox jComboBox) {                                        
        FileReader fr;
        try {
            File f = new File(filePath);
            if(!f.exists()) {   // if file doesn't exist throw error message
                JOptionPane.showMessageDialog(null, "Error opening the file");
            }
            fr = new FileReader(f); // if the file exists, initialize FileReader.
            Gson gson = new Gson();
            makeArray = gson.fromJson(fr, String[].class);  // use Gson class constructor to grab string array data from the file.
            jComboBox.setModel(new DefaultComboBoxModel(makeArray)); // converted string array to DefaultComboBoxModel because ComboBoxModel is an interface class.
                                                                          // setModel puts data into the combobox specified.
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error opening the file: " + ex.getMessage());
        }
    }
    
    /* method: uses data from the following API/github repository, downloaded in Vscode, edited using Name: CSV to JSON Converter and  
               Edit CSV file https://marketplace.visualstudio.com/items?itemName=janisdd.vscode-edit-csv
               CSV to Json file Converter: (https://marketplace.visualstudio.com/items?itemName=Chukwuamaka.csvtojson-converter)
               Github Repo/API link: https://github.com/abhionlyone/us-car-models-data
       parameters: filePath to data files, jComboBox.
       returns: void.
    */
    private void addJsonToComboBoxModel(String filePath, JComboBox jComboBox) {  
        FileReader fr;
        try {
            File f = new File(filePath);
            if(!f.exists()) {   // if file doesn't exist throw error message
                JOptionPane.showMessageDialog(null, "Error opening the file");
            }
            fr = new FileReader(f); // if the file exists, initialize FileReader.
            Gson gson = new Gson();
            
            info = gson.fromJson(fr, ModelsListResult[].class);
            ArrayList<String> modelArrayList = new ArrayList<>(); // initialize and declare an ArrayList to hold all of the Strings from the desired objects from the file. 
            String make = getMake();
            for (ModelsListResult each : info) {     // loop through info objects that each hold year, make, model (all objects in the list and are of type ModelsListResult).
                if(each.make.equals(make)) {  // check if the corresponding selected make in jComboBoxMake is the same as the make in the object from the file.
                    modelArrayList.add(each.model);  // add model that corresponds with the make in that object.
                }
            }
            modelArray = modelArrayList.toArray(String[]::new);
            jComboBox.setModel(new DefaultComboBoxModel(modelArray)); // converted string array to DefaultComboBoxModel because ComboBoxModel is an interface class.
           
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error opening the file: " + ex.getMessage());
        }
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuickSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuickSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuickSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuickSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuickSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButtonAutoTrader;
    private javax.swing.JButton jButtonCarMax;
    private javax.swing.JButton jButtonCars;
    private javax.swing.JButton jButtonFavorites;
    private javax.swing.JButton jButtonSaveSearch;
    private javax.swing.JButton jButtonTrueCar;
    private javax.swing.JComboBox<String> jComboBoxDistance;
    private javax.swing.JComboBox<String> jComboBoxMake;
    private javax.swing.JComboBox<String> jComboBoxModel;
    private javax.swing.JComboBox<String> jComboBoxYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelMake;
    private javax.swing.JLabel jLabelModel;
    private javax.swing.JLabel jLabelYear;
    private javax.swing.JLabel jLabelYear1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JTextField jtfZipCode;
    // End of variables declaration//GEN-END:variables
}
